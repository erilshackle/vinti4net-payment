{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\ud83d\udcb3 Vinti4Pay PHP SDK Bem-vindo \u00e0 documenta\u00e7\u00e3o oficial do Vinti4Pay PHP SDK , uma biblioteca moderna e orientada a objetos para integra\u00e7\u00e3o com o gateway Vinti4Net (SISP) , permitindo pagamentos online, recargas, estornos e consultas de forma simples e segura. \u2699\ufe0f Recursos principais \ud83d\udcb0 Pagamentos por cart\u00e3o Vinti4 \ud83d\udd01 Estornos (Refund/Reversal) \ud83e\uddfe Gera\u00e7\u00e3o de recibos HTML \ud83e\udde9 Verifica\u00e7\u00e3o autom\u00e1tica de fingerprint \ud83d\udce6 Baseado em PHP 8+ \ud83e\udde0 C\u00f3digo limpo e documentado \ud83d\ude80 Comece agora Instale o pacote com o Composer. Configure o seu POS ID e POS Auth Code . Crie o formul\u00e1rio de pagamento. Receba e valide o retorno (callback). \ud83d\udcda Estrutura da documenta\u00e7\u00e3o Instala\u00e7\u00e3o e Uso Compra (Pagamento de Produtos) Pagamento de Servi\u00e7o Recarga Callback / Retorno Estorno (Refund) Resultados (Vinti4Result) Exemplos completos Sobre o projeto","title":"Home"},{"location":"#vinti4pay-php-sdk","text":"Bem-vindo \u00e0 documenta\u00e7\u00e3o oficial do Vinti4Pay PHP SDK , uma biblioteca moderna e orientada a objetos para integra\u00e7\u00e3o com o gateway Vinti4Net (SISP) , permitindo pagamentos online, recargas, estornos e consultas de forma simples e segura.","title":"\ud83d\udcb3 Vinti4Pay PHP SDK"},{"location":"#recursos-principais","text":"\ud83d\udcb0 Pagamentos por cart\u00e3o Vinti4 \ud83d\udd01 Estornos (Refund/Reversal) \ud83e\uddfe Gera\u00e7\u00e3o de recibos HTML \ud83e\udde9 Verifica\u00e7\u00e3o autom\u00e1tica de fingerprint \ud83d\udce6 Baseado em PHP 8+ \ud83e\udde0 C\u00f3digo limpo e documentado","title":"\u2699\ufe0f Recursos principais"},{"location":"#comece-agora","text":"Instale o pacote com o Composer. Configure o seu POS ID e POS Auth Code . Crie o formul\u00e1rio de pagamento. Receba e valide o retorno (callback).","title":"\ud83d\ude80 Comece agora"},{"location":"#estrutura-da-documentacao","text":"Instala\u00e7\u00e3o e Uso Compra (Pagamento de Produtos) Pagamento de Servi\u00e7o Recarga Callback / Retorno Estorno (Refund) Resultados (Vinti4Result) Exemplos completos Sobre o projeto","title":"\ud83d\udcda Estrutura da documenta\u00e7\u00e3o"},{"location":"callback/","text":"\ud83d\udd01 Callback \u2014 Retorno Autom\u00e1tico de Pagamentos (Vinti4Net) Ap\u00f3s a submiss\u00e3o do formul\u00e1rio de pagamento, o utilizador \u00e9 redirecionado para o ambiente seguro da Vinti4Net , onde insere os dados do seu cart\u00e3o e confirma a opera\u00e7\u00e3o. Assim que a transa\u00e7\u00e3o \u00e9 conclu\u00edda (com sucesso, cancelamento ou erro), o gateway Vinti4Net assim retorna um POST para responseUrl onde \u00e9 o ponto principal documentado aqui: \ud83d\udccd Endpoint do Callback Durante a cria\u00e7\u00e3o da transa\u00e7\u00e3o (checkout), \u00e9 obrigat\u00f3rio definir o par\u00e2metro responseUrl , que aponta para o endpoint p\u00fablico que ir\u00e1 receber o callback: // exemplo $fields = $vinti4->preparePayment( amount: $pedido->total, responseUrl: 'https://seusite.cv/api/vinti4/callback', options: [ 'merchantRef' => $pedido->id, 'merchantSession' => session_id(), ] ); echo $vinti4->generateHtmlForm($fields); O formul\u00e1rio gerado ( generateHtmlForm() ) redireciona o utilizador ao ambiente da Vinti4Net , e o fluxo segue automaticamente: Cliente \u2192 P\u00e1gina de Pagamento da Vinti4 \u2192 Confirma\u00e7\u00e3o \u2192 Callback (POST \u2192 Seu servidor) O callback \u00e9 uma requisi\u00e7\u00e3o HTTP POST enviada diretamente do servidor da Vinti4Net para o seu endpoint, contendo os campos de resposta da transa\u00e7\u00e3o. \ud83d\udcec Estrutura da Requisi\u00e7\u00e3o (POST) A Vinti4Net envia um conjunto de campos via POST com a seguinte estrutura: Campo Tipo Descri\u00e7\u00e3o transactionCode int Tipo de opera\u00e7\u00e3o ( 1 = pagamento, 2 = estorno). posID string Identificador POS do comerciante. merchantRef string Refer\u00eancia interna da transa\u00e7\u00e3o. amount string Valor total (sem separador decimal). dateTime string Data e hora da transa\u00e7\u00e3o. authorizationCode string C\u00f3digo de autoriza\u00e7\u00e3o da opera\u00e7\u00e3o. responseCode string C\u00f3digo da resposta. responseDesc string Descri\u00e7\u00e3o da resposta. fingerprint string Assinatura criptogr\u00e1fica SHA1. fingerprintversion string Vers\u00e3o do algoritmo de assinatura. timeStamp string Data/hora de gera\u00e7\u00e3o da resposta. dccData (opcional) string Dados de c\u00e2mbio em Base64 (quando aplic\u00e1vel). \ud83d\udd10 Verifica\u00e7\u00e3o de Integridade (Fingerprint) O campo fingerprint \u00e9 um hash de seguran\u00e7a SHA1 calculado pela Vinti4 com base nos dados da transa\u00e7\u00e3o e na sua chave privada. F\u00f3rmula de c\u00e1lculo: SHA1(posID + transactionCode + merchantRef + amount + responseCode + timeStamp + secretKey) Durante o processamento do callback, o SDK recalcula esse valor localmente e compara com o recebido. Se houver diverg\u00eancia, o status ser\u00e1 INVALID_FINGERPRINT . \u2699\ufe0f Processamento Autom\u00e1tico com o SDK O m\u00e9todo processResponse() do Vinti4Pay valida automaticamente a resposta, verifica o fingerprint e retorna uma estrutura organizada para tratamento interno. Exemplo B\u00e1sico use Erilshk\\Vinti4Pay\\Vinti4Pay; $vinti4 = new Vinti4Pay('90000443', 'SUA_CHAVE_SECRETA'); // Processa os dados recebidos via POST $result = $vinti4->processResponse($_POST); switch ($result['status']) { case 'SUCCESS': // Atualiza pedido como pago Pedido::confirmar($result['data']['merchantRef']); break; case 'CANCELLED': // Usu\u00e1rio cancelou o pagamento Pedido::cancelar($result['data']['merchantRef']); break; case 'INVALID_FINGERPRINT': // Poss\u00edvel fraude ou assinatura corrompida Log::warning('Fingerprint inv\u00e1lido', $result['debug']); break; default: // Erro gen\u00e9rico Log::error('Falha no callback', $result); } \ud83e\uddfe Estrutura de Retorno ( processResponse() ) array{ status: string, // 'SUCCESS', 'CANCELLED', 'INVALID_FINGERPRINT', 'ERROR' message: string, // Descri\u00e7\u00e3o leg\u00edvel success: bool, // true se transa\u00e7\u00e3o foi aprovada data: array, // Dados originais do POST dcc?: array, // Dados DCC decodificados (quando aplic\u00e1vel) debug?: array, // Informa\u00e7\u00f5es extras em caso de erro detail?: string // Detalhes t\u00e9cnicos } Campos principais Campo Tipo Descri\u00e7\u00e3o status string Estado final da transa\u00e7\u00e3o. SUCCESS CANCELLED INVALID_FINGERPRINT ERROR success bool Indica sucesso da transa\u00e7\u00e3o message string Texto explicativo para logs. data array Dados originais do POST. dcc array Dados de c\u00e2mbio (quando fornecidos). debug array Hashes calculados/recebidos para compara\u00e7\u00e3o. detail string Descri\u00e7\u00e3o t\u00e9cnica do erro. \ud83e\udde0 Exemplo de Resposta [ \"status\" => \"SUCCESS\", \"message\" => \"Pagamento confirmado com sucesso.\", \"success\" => true, \"data\" => [ \"transactionCode\" => \"1\", \"merchantRef\" => \"ORD12345\", \"amount\" => \"2500\", \"responseCode\" => \"00\", \"responseDesc\" => \"APROVADA\", \"fingerprint\" => \"3e7f2e4e8d4b9a6c3d7a1f...\" ], \"dcc\" => null ] \ud83d\udea8 Status Poss\u00edveis Status Significado Condi\u00e7\u00e3o SUCCESS Pagamento conclu\u00eddo messageType , merchantResp e fingerPrint OK. CANCELLED Transa\u00e7\u00e3o cancelada Usu\u00e1rio abortou o processo INVALID_FINGERPRINT Hash divergente Poss\u00edvel adultera\u00e7\u00e3o ou erro de configura\u00e7\u00e3o ERROR Falha geral Dados inv\u00e1lidos ou resposta incompleta \ud83e\udde9 Exemplo Completo com Vinti4Result (opcional) // exemplo use Erilshk\\Vinti4Pay\\Vinti4Pay; use Erilshk\\Vinti4Pay\\Vinti4Result; $vinti4 = new Vinti4Pay('90000443', 'SUA_CHAVE_SECRETA'); $response = $vinti4->processResponse($_POST); $result = new Vinti4Result($response); $result ->onSuccessfulTransaction(function (Vinti4Result $r) { Pedido::pago($r->data['merchantRespMerchantRef']); Log::info('Pagamento confirmado', $r->toArray()); }) ->onFailedTransaction(function (Vinti4Result $r) { Log::error('Falha no pagamento', $r->toArray()); }) ->onCancelledTransaction(function (Vinti4Result $r) { Log::warning('Pagamento cancelado', $r->toArray()); }); \ud83e\uddf1 Requisitos e Procedimentos Requisito Descri\u00e7\u00e3o HTTPS obrigat\u00f3rio O responseUrl deve estar sob HTTPS v\u00e1lido. IP permitido Restrinja o acesso a IPs da rede Vinti4Net, se poss\u00edvel. Registo de logs Armazene merchantRef , responseCode , fingerprint . result: ->jsonData() Sem sa\u00edda HTML O endpoint de resposta n\u00e3o deve gerar HTML, apenas processar e registrar.","title":"Callback / Retorno"},{"location":"callback/#callback-retorno-automatico-de-pagamentos-vinti4net","text":"Ap\u00f3s a submiss\u00e3o do formul\u00e1rio de pagamento, o utilizador \u00e9 redirecionado para o ambiente seguro da Vinti4Net , onde insere os dados do seu cart\u00e3o e confirma a opera\u00e7\u00e3o. Assim que a transa\u00e7\u00e3o \u00e9 conclu\u00edda (com sucesso, cancelamento ou erro), o gateway Vinti4Net assim retorna um POST para responseUrl onde \u00e9 o ponto principal documentado aqui:","title":"\ud83d\udd01 Callback \u2014 Retorno Autom\u00e1tico de Pagamentos (Vinti4Net)"},{"location":"callback/#endpoint-do-callback","text":"Durante a cria\u00e7\u00e3o da transa\u00e7\u00e3o (checkout), \u00e9 obrigat\u00f3rio definir o par\u00e2metro responseUrl , que aponta para o endpoint p\u00fablico que ir\u00e1 receber o callback: // exemplo $fields = $vinti4->preparePayment( amount: $pedido->total, responseUrl: 'https://seusite.cv/api/vinti4/callback', options: [ 'merchantRef' => $pedido->id, 'merchantSession' => session_id(), ] ); echo $vinti4->generateHtmlForm($fields); O formul\u00e1rio gerado ( generateHtmlForm() ) redireciona o utilizador ao ambiente da Vinti4Net , e o fluxo segue automaticamente: Cliente \u2192 P\u00e1gina de Pagamento da Vinti4 \u2192 Confirma\u00e7\u00e3o \u2192 Callback (POST \u2192 Seu servidor) O callback \u00e9 uma requisi\u00e7\u00e3o HTTP POST enviada diretamente do servidor da Vinti4Net para o seu endpoint, contendo os campos de resposta da transa\u00e7\u00e3o.","title":"\ud83d\udccd Endpoint do Callback"},{"location":"callback/#estrutura-da-requisicao-post","text":"A Vinti4Net envia um conjunto de campos via POST com a seguinte estrutura: Campo Tipo Descri\u00e7\u00e3o transactionCode int Tipo de opera\u00e7\u00e3o ( 1 = pagamento, 2 = estorno). posID string Identificador POS do comerciante. merchantRef string Refer\u00eancia interna da transa\u00e7\u00e3o. amount string Valor total (sem separador decimal). dateTime string Data e hora da transa\u00e7\u00e3o. authorizationCode string C\u00f3digo de autoriza\u00e7\u00e3o da opera\u00e7\u00e3o. responseCode string C\u00f3digo da resposta. responseDesc string Descri\u00e7\u00e3o da resposta. fingerprint string Assinatura criptogr\u00e1fica SHA1. fingerprintversion string Vers\u00e3o do algoritmo de assinatura. timeStamp string Data/hora de gera\u00e7\u00e3o da resposta. dccData (opcional) string Dados de c\u00e2mbio em Base64 (quando aplic\u00e1vel).","title":"\ud83d\udcec Estrutura da Requisi\u00e7\u00e3o (POST)"},{"location":"callback/#verificacao-de-integridade-fingerprint","text":"O campo fingerprint \u00e9 um hash de seguran\u00e7a SHA1 calculado pela Vinti4 com base nos dados da transa\u00e7\u00e3o e na sua chave privada. F\u00f3rmula de c\u00e1lculo: SHA1(posID + transactionCode + merchantRef + amount + responseCode + timeStamp + secretKey) Durante o processamento do callback, o SDK recalcula esse valor localmente e compara com o recebido. Se houver diverg\u00eancia, o status ser\u00e1 INVALID_FINGERPRINT .","title":"\ud83d\udd10 Verifica\u00e7\u00e3o de Integridade (Fingerprint)"},{"location":"callback/#processamento-automatico-com-o-sdk","text":"O m\u00e9todo processResponse() do Vinti4Pay valida automaticamente a resposta, verifica o fingerprint e retorna uma estrutura organizada para tratamento interno.","title":"\u2699\ufe0f Processamento Autom\u00e1tico com o SDK"},{"location":"callback/#exemplo-basico","text":"use Erilshk\\Vinti4Pay\\Vinti4Pay; $vinti4 = new Vinti4Pay('90000443', 'SUA_CHAVE_SECRETA'); // Processa os dados recebidos via POST $result = $vinti4->processResponse($_POST); switch ($result['status']) { case 'SUCCESS': // Atualiza pedido como pago Pedido::confirmar($result['data']['merchantRef']); break; case 'CANCELLED': // Usu\u00e1rio cancelou o pagamento Pedido::cancelar($result['data']['merchantRef']); break; case 'INVALID_FINGERPRINT': // Poss\u00edvel fraude ou assinatura corrompida Log::warning('Fingerprint inv\u00e1lido', $result['debug']); break; default: // Erro gen\u00e9rico Log::error('Falha no callback', $result); }","title":"Exemplo B\u00e1sico"},{"location":"callback/#estrutura-de-retorno-processresponse","text":"array{ status: string, // 'SUCCESS', 'CANCELLED', 'INVALID_FINGERPRINT', 'ERROR' message: string, // Descri\u00e7\u00e3o leg\u00edvel success: bool, // true se transa\u00e7\u00e3o foi aprovada data: array, // Dados originais do POST dcc?: array, // Dados DCC decodificados (quando aplic\u00e1vel) debug?: array, // Informa\u00e7\u00f5es extras em caso de erro detail?: string // Detalhes t\u00e9cnicos }","title":"\ud83e\uddfe Estrutura de Retorno (processResponse())"},{"location":"callback/#campos-principais","text":"Campo Tipo Descri\u00e7\u00e3o status string Estado final da transa\u00e7\u00e3o. SUCCESS CANCELLED INVALID_FINGERPRINT ERROR success bool Indica sucesso da transa\u00e7\u00e3o message string Texto explicativo para logs. data array Dados originais do POST. dcc array Dados de c\u00e2mbio (quando fornecidos). debug array Hashes calculados/recebidos para compara\u00e7\u00e3o. detail string Descri\u00e7\u00e3o t\u00e9cnica do erro.","title":"Campos principais"},{"location":"callback/#exemplo-de-resposta","text":"[ \"status\" => \"SUCCESS\", \"message\" => \"Pagamento confirmado com sucesso.\", \"success\" => true, \"data\" => [ \"transactionCode\" => \"1\", \"merchantRef\" => \"ORD12345\", \"amount\" => \"2500\", \"responseCode\" => \"00\", \"responseDesc\" => \"APROVADA\", \"fingerprint\" => \"3e7f2e4e8d4b9a6c3d7a1f...\" ], \"dcc\" => null ]","title":"\ud83e\udde0 Exemplo de Resposta"},{"location":"callback/#status-possiveis","text":"Status Significado Condi\u00e7\u00e3o SUCCESS Pagamento conclu\u00eddo messageType , merchantResp e fingerPrint OK. CANCELLED Transa\u00e7\u00e3o cancelada Usu\u00e1rio abortou o processo INVALID_FINGERPRINT Hash divergente Poss\u00edvel adultera\u00e7\u00e3o ou erro de configura\u00e7\u00e3o ERROR Falha geral Dados inv\u00e1lidos ou resposta incompleta","title":"\ud83d\udea8 Status Poss\u00edveis"},{"location":"callback/#exemplo-completo-com-vinti4result-opcional","text":"// exemplo use Erilshk\\Vinti4Pay\\Vinti4Pay; use Erilshk\\Vinti4Pay\\Vinti4Result; $vinti4 = new Vinti4Pay('90000443', 'SUA_CHAVE_SECRETA'); $response = $vinti4->processResponse($_POST); $result = new Vinti4Result($response); $result ->onSuccessfulTransaction(function (Vinti4Result $r) { Pedido::pago($r->data['merchantRespMerchantRef']); Log::info('Pagamento confirmado', $r->toArray()); }) ->onFailedTransaction(function (Vinti4Result $r) { Log::error('Falha no pagamento', $r->toArray()); }) ->onCancelledTransaction(function (Vinti4Result $r) { Log::warning('Pagamento cancelado', $r->toArray()); });","title":"\ud83e\udde9 Exemplo Completo com Vinti4Result (opcional)"},{"location":"callback/#requisitos-e-procedimentos","text":"Requisito Descri\u00e7\u00e3o HTTPS obrigat\u00f3rio O responseUrl deve estar sob HTTPS v\u00e1lido. IP permitido Restrinja o acesso a IPs da rede Vinti4Net, se poss\u00edvel. Registo de logs Armazene merchantRef , responseCode , fingerprint . result: ->jsonData() Sem sa\u00edda HTML O endpoint de resposta n\u00e3o deve gerar HTML, apenas processar e registrar.","title":"\ud83e\uddf1 Requisitos e Procedimentos"},{"location":"compra/","text":"\ud83d\udcb3 Compra com Vinti4Pay Esta p\u00e1gina detalha como gerar um formul\u00e1rio de compra utilizando o SDK Vinti4Pay PHP . O m\u00e9todo principal para criar uma compra \u00e9: public function createPurchaseForm( float|string $amount, string $responseUrl, array $billing, array $extras = [] ): string \u2699\ufe0f Par\u00e2metros Par\u00e2metro Tipo Obrigat\u00f3rio Descri\u00e7\u00e3o amount float/string Sim Valor da transa\u00e7\u00e3o (em CVE). Pode ser float ou string num\u00e9rica. responseUrl string Sim URL do callback que receber\u00e1 a resposta do pagamento. billing array Sim Dados de fatura\u00e7\u00e3o do cliente para purchaseRequest . Campos obrigat\u00f3rios: billAddrCountry , billAddrCity , billAddrLine1 , billAddrPostCode , email . Campos adicionais: acctID , acctInfo , addrMatch , billAddrState , workPhone , mobilePhone , etc. extras array N\u00e3o Par\u00e2metros adicionais opcionais, como referencia, sess\u00e3o, idioma da interface, moeda, etc. ex: merchatRef , merchantSession , currency , languageMessages \ud83d\udcdd Retorno O m\u00e9todo retorna um formul\u00e1rio HTML completo pronto para submiss\u00e3o autom\u00e1tica ao endpoint da SISP : <!-- exemplo --> <html> <head><title>Vinti4Pay Payment</title></head> <body onload=\"document.forms[0].submit()\"> <div> <h5>Processing payment... Please wait.</h5> <form action=\"https://...\" method=\"post\"> <input type=\"hidden\" name=\"transactionCode\" value=\"1\"> <input type=\"hidden\" name=\"posID\" value=\"...\"> <input type=\"hidden\" name=\"merchantRef\" value=\"R20251030120000\"> <input type=\"hidden\" name=\"merchantSession\" value=\"S20251030120000\"> <input type=\"hidden\" name=\"amount\" value=\"1500\"> <input type=\"hidden\" name=\"currency\" value=\"132\"> <input type=\"hidden\" name=\"is3DSec\" value=\"1\"> <input type=\"hidden\" name=\"urlMerchantResponse\" value=\"https://seusite.cv/vinti4/callback.php\"> <input type=\"hidden\" name=\"purchaseRequest\" value=\"eyJiaWxsQWRkcmVzc0NvdW50cnkiOiJ...\"> <input type=\"hidden\" name=\"timeStamp\" value=\"2025-10-30 12:00:00\"> <input type=\"hidden\" name=\"fingerprintversion\" value=\"1\"> <input type=\"hidden\" name=\"fingerprint\" value=\"nP0K...\"> </form> </div> </body> </html> O formul\u00e1rio \u00e9 enviado automaticamente via onload , dispensando manipula\u00e7\u00e3o manual de campos. \ud83d\udd39 Exemplo de Uso use Erilshk\\Vinti4Pay\\Vinti4Pay; // Instanciar SDK $vinti4 = new Vinti4Pay('90000443', 'SEU_AUTH_CODE'); // Dados de fatura\u00e7\u00e3o do cliente $billing = [ 'billAddrCountry' => 'CV', 'billAddrCity' => 'Praia', 'billAddrLine1' => 'Rua Principal', 'billAddrPostCode'=> '7600', 'email' => 'cliente@exemplo.cv', 'addrMatch' => 'Y', // opcional: shipping = billing // 'user' => $user // v2.1 ]; // Gerar formul\u00e1rio de compra echo $vinti4->createPurchaseForm( 1500, 'https://seusite.cv/vinti4/callback.php', $billing ); \u26a0\ufe0f Observa\u00e7\u00f5es T\u00e9cnicas O SDK valida automaticamente os campos obrigat\u00f3rios de fatura\u00e7\u00e3o. Caso algum esteja faltando, ser\u00e1 lan\u00e7ada uma exce\u00e7\u00e3o \\InvalidArgumentException . O valor de amount \u00e9 convertido internamente para milles (multiplicado por 1000) para a comunica\u00e7\u00e3o com a SISP. O callback deve tratar a resposta usando: $response = $vinti4->processResponse($_POST); if ($response['success']) { // Pagamento aprovado } else { // Tratar erro ou cancelamento } Para projetos sem Composer , utilize a vers\u00e3o em portugu\u00eas presente em dist/Vinti4Pay.php . O funcionamento \u00e9 id\u00eantico, mantendo os m\u00e9todos createPurchaseForm() e processResponse() . \ud83d\udd17 Pr\u00f3ximo passo Ap\u00f3s gerar o formul\u00e1rio, consulte a documenta\u00e7\u00e3o de: Pagamento de Servi\u00e7o Recarga Callback / Retorno","title":"\ud83d\udcb3 Compra com Vinti4Pay"},{"location":"compra/#compra-com-vinti4pay","text":"Esta p\u00e1gina detalha como gerar um formul\u00e1rio de compra utilizando o SDK Vinti4Pay PHP . O m\u00e9todo principal para criar uma compra \u00e9: public function createPurchaseForm( float|string $amount, string $responseUrl, array $billing, array $extras = [] ): string","title":"\ud83d\udcb3 Compra com Vinti4Pay"},{"location":"compra/#parametros","text":"Par\u00e2metro Tipo Obrigat\u00f3rio Descri\u00e7\u00e3o amount float/string Sim Valor da transa\u00e7\u00e3o (em CVE). Pode ser float ou string num\u00e9rica. responseUrl string Sim URL do callback que receber\u00e1 a resposta do pagamento. billing array Sim Dados de fatura\u00e7\u00e3o do cliente para purchaseRequest . Campos obrigat\u00f3rios: billAddrCountry , billAddrCity , billAddrLine1 , billAddrPostCode , email . Campos adicionais: acctID , acctInfo , addrMatch , billAddrState , workPhone , mobilePhone , etc. extras array N\u00e3o Par\u00e2metros adicionais opcionais, como referencia, sess\u00e3o, idioma da interface, moeda, etc. ex: merchatRef , merchantSession , currency , languageMessages","title":"\u2699\ufe0f Par\u00e2metros"},{"location":"compra/#retorno","text":"O m\u00e9todo retorna um formul\u00e1rio HTML completo pronto para submiss\u00e3o autom\u00e1tica ao endpoint da SISP : <!-- exemplo --> <html> <head><title>Vinti4Pay Payment</title></head> <body onload=\"document.forms[0].submit()\"> <div> <h5>Processing payment... Please wait.</h5> <form action=\"https://...\" method=\"post\"> <input type=\"hidden\" name=\"transactionCode\" value=\"1\"> <input type=\"hidden\" name=\"posID\" value=\"...\"> <input type=\"hidden\" name=\"merchantRef\" value=\"R20251030120000\"> <input type=\"hidden\" name=\"merchantSession\" value=\"S20251030120000\"> <input type=\"hidden\" name=\"amount\" value=\"1500\"> <input type=\"hidden\" name=\"currency\" value=\"132\"> <input type=\"hidden\" name=\"is3DSec\" value=\"1\"> <input type=\"hidden\" name=\"urlMerchantResponse\" value=\"https://seusite.cv/vinti4/callback.php\"> <input type=\"hidden\" name=\"purchaseRequest\" value=\"eyJiaWxsQWRkcmVzc0NvdW50cnkiOiJ...\"> <input type=\"hidden\" name=\"timeStamp\" value=\"2025-10-30 12:00:00\"> <input type=\"hidden\" name=\"fingerprintversion\" value=\"1\"> <input type=\"hidden\" name=\"fingerprint\" value=\"nP0K...\"> </form> </div> </body> </html> O formul\u00e1rio \u00e9 enviado automaticamente via onload , dispensando manipula\u00e7\u00e3o manual de campos.","title":"\ud83d\udcdd Retorno"},{"location":"compra/#exemplo-de-uso","text":"use Erilshk\\Vinti4Pay\\Vinti4Pay; // Instanciar SDK $vinti4 = new Vinti4Pay('90000443', 'SEU_AUTH_CODE'); // Dados de fatura\u00e7\u00e3o do cliente $billing = [ 'billAddrCountry' => 'CV', 'billAddrCity' => 'Praia', 'billAddrLine1' => 'Rua Principal', 'billAddrPostCode'=> '7600', 'email' => 'cliente@exemplo.cv', 'addrMatch' => 'Y', // opcional: shipping = billing // 'user' => $user // v2.1 ]; // Gerar formul\u00e1rio de compra echo $vinti4->createPurchaseForm( 1500, 'https://seusite.cv/vinti4/callback.php', $billing );","title":"\ud83d\udd39 Exemplo de Uso"},{"location":"compra/#observacoes-tecnicas","text":"O SDK valida automaticamente os campos obrigat\u00f3rios de fatura\u00e7\u00e3o. Caso algum esteja faltando, ser\u00e1 lan\u00e7ada uma exce\u00e7\u00e3o \\InvalidArgumentException . O valor de amount \u00e9 convertido internamente para milles (multiplicado por 1000) para a comunica\u00e7\u00e3o com a SISP. O callback deve tratar a resposta usando: $response = $vinti4->processResponse($_POST); if ($response['success']) { // Pagamento aprovado } else { // Tratar erro ou cancelamento } Para projetos sem Composer , utilize a vers\u00e3o em portugu\u00eas presente em dist/Vinti4Pay.php . O funcionamento \u00e9 id\u00eantico, mantendo os m\u00e9todos createPurchaseForm() e processResponse() .","title":"\u26a0\ufe0f Observa\u00e7\u00f5es T\u00e9cnicas"},{"location":"compra/#proximo-passo","text":"Ap\u00f3s gerar o formul\u00e1rio, consulte a documenta\u00e7\u00e3o de: Pagamento de Servi\u00e7o Recarga Callback / Retorno","title":"\ud83d\udd17 Pr\u00f3ximo passo"},{"location":"exemplos/","text":"\ud83e\uddea Exemplo Completo de Integra\u00e7\u00e3o (Vinti4Pay) Este exemplo demonstra todo o fluxo de pagamento com Vinti4Pay , desde a gera\u00e7\u00e3o do pedido, cria\u00e7\u00e3o do formul\u00e1rio de checkout, processamento do retorno e tratamento do callback autom\u00e1tico. \u2699\ufe0f 1. Estrutura B\u00e1sica de Arquivos Crie os seguintes arquivos no seu ambiente de testes (por exemplo, localhost:8000 ): /project-root/ \u251c\u2500\u2500 composer.json \u251c\u2500\u2500 vendor/ \u251c\u2500\u2500 vinti4.php \u2190 p\u00e1gina de checkout e retorno \u251c\u2500\u2500 callback.php \u2190 endpoint p\u00fablico de callback \u2514\u2500\u2500 .env \u2190 suas credenciais de teste \ud83d\udd10 2. Configura\u00e7\u00e3o No arquivo .env (ou vari\u00e1veis de ambiente): VINTI4_POS_ID=90000443 VINTI4_AUT_CODE=SEU_AUTH_CODE_DE_TESTE \ud83d\udcb3 3. Checkout e Redirecionamento ( vinti4.php ) Crie o arquivo vinti4.php : <?php use Erilshk\\Vinti4Pay\\Vinti4Pay; use Erilshk\\Vinti4Pay\\Vinti4Result; require __DIR__ . '/vendor/autoload.php'; $posID = getenv('VINTI4_POS_ID'); $authCode = getenv('VINTI4_AUTH_CODE'); $vinti4 = new Vinti4Pay($posID, $authCode); // === Caso seja o retorno do gateway (POST) === if ($_SERVER['REQUEST_METHOD'] === 'POST') { $response = $vinti4->processResponse($_POST); $result = new Vinti4Result($response); $result ->onSuccessfulTransaction(function (Vinti4Result $r) { file_put_contents('payments.log', json_encode($r->toArray(), JSON_PRETTY_PRINT), FILE_APPEND); echo $r->generateReceipt(); }) ->onFailedTransaction(function (Vinti4Result $r) { echo \"<p>Falha no pagamento: {$r->message}</p>\"; }) ->onCancelledTransaction(function (Vinti4Result $r) { echo \"<p>Pagamento cancelado pelo utilizador.</p>\"; }); exit; } // === Checkout inicial (GET) === if (isset($_POST['amount'])) { $amount = (float) $_POST['amount']; // Cria a transa\u00e7\u00e3o $fields = $vinti4->preparePayment( amount: $amount, responseUrl: 'http://localhost:8000/vinti4.php', // retorno local options: [ 'merchantRef' => 'TEST-' . uniqid(), 'merchantSession' => session_id(), ] ); // Redireciona o utilizador para o ambiente de pagamento echo $vinti4->generateHtmlForm($fields); exit; } // === P\u00e1gina inicial de teste === ?> <!DOCTYPE html> <html lang=\"pt\"> <head> <meta charset=\"UTF-8\"> <title>Teste Vinti4Pay</title> <style> body { font-family: Arial, sans-serif; max-width: 400px; margin: 60px auto; text-align: center; } input, button { padding: 10px; width: 100%; margin-top: 10px; font-size: 1rem; } button { background: #007bff; color: white; border: none; cursor: pointer; } button:hover { background: #0056b3; } </style> </head> <body> <h2>\ud83d\udcb3 Teste de Pagamento Vinti4</h2> <form method=\"POST\" action=\"\"> <input type=\"number\" name=\"amount\" step=\"0.01\" min=\"1\" placeholder=\"Montante (ex: 2500)\" required> <button type=\"submit\">Pagar com Vinti4</button> </form> </body> </html> \ud83d\udd01 4. Endpoint de Callback ( callback.php ) O callback \u00e9 a notifica\u00e7\u00e3o direta da Vinti4Net ao servidor, confirmando o estado final da transa\u00e7\u00e3o. <?php use Erilshk\\Vinti4Pay\\Vinti4Pay; require __DIR__ . '/vendor/autoload.php'; $vinti4 = new Vinti4Pay(getenv('VINTI4_POS_ID'), getenv('VINTI4_AUTH_CODE')); $response = $vinti4->processResponse($_POST); file_put_contents('callback.log', json_encode($response, JSON_PRETTY_PRINT), FILE_APPEND); // Sempre retornar HTTP 200 OK http_response_code(200); \ud83d\udcdc 5. Fluxo de Execu\u00e7\u00e3o Cliente \u2192 vinti4.php (checkout) \u2193 Formul\u00e1rio POST \u2192 Vinti4Net \u2193 P\u00e1gina de Pagamento Vinti4Net \u2193 \u2192 Retorno ao comerciante (responseUrl) \u2192 Callback HTTP POST (callback.php) \ud83e\udde9 6. Estrutura de Dados Recebida (Callback) { \"status\": \"SUCCESS\", \"message\": \"Transa\u00e7\u00e3o aprovada\", \"success\": true, \"data\": { \"merchantRespMerchantRef\": \"TEST-6720ef3d5bc\", \"merchantRespPurchaseAmount\": \"2500.00\", \"merchantRespPurchaseCurrency\": \"132\", \"merchantRespApprovalCode\": \"A12345\" } } \ud83e\uddea 7. Procedimento de Teste Local Inicie o servidor embutido PHP bash php -S localhost:8000 Acesse no navegador: http://localhost:8000/vinti4.php Digite um valor (ex: 2500 ) e clique em Pagar com Vinti4 . O sistema ir\u00e1 gerar o formul\u00e1rio de checkout e redirecionar automaticamente para o ambiente Vinti4Net (em produ\u00e7\u00e3o ou sandbox). Ap\u00f3s confirmar o pagamento, voc\u00ea ser\u00e1 redirecionado de volta \u00e0 p\u00e1gina local ( vinti4.php ) e o callback ser\u00e1 executado em paralelo. Consulte os arquivos gerados: payments.log callback.log Esses arquivos cont\u00eam os registros de todas as transa\u00e7\u00f5es processadas. \u2705 Resultado Esperado Transa\u00e7\u00f5es bem-sucedidas devem exibir um recibo formatado ( generateReceipt() ). Logs devem conter a resposta completa do gateway. Callback deve retornar HTTP 200 sem conte\u00fado HTML.","title":"Exemplos"},{"location":"exemplos/#exemplo-completo-de-integracao-vinti4pay","text":"Este exemplo demonstra todo o fluxo de pagamento com Vinti4Pay , desde a gera\u00e7\u00e3o do pedido, cria\u00e7\u00e3o do formul\u00e1rio de checkout, processamento do retorno e tratamento do callback autom\u00e1tico.","title":"\ud83e\uddea Exemplo Completo de Integra\u00e7\u00e3o (Vinti4Pay)"},{"location":"exemplos/#1-estrutura-basica-de-arquivos","text":"Crie os seguintes arquivos no seu ambiente de testes (por exemplo, localhost:8000 ): /project-root/ \u251c\u2500\u2500 composer.json \u251c\u2500\u2500 vendor/ \u251c\u2500\u2500 vinti4.php \u2190 p\u00e1gina de checkout e retorno \u251c\u2500\u2500 callback.php \u2190 endpoint p\u00fablico de callback \u2514\u2500\u2500 .env \u2190 suas credenciais de teste","title":"\u2699\ufe0f 1. Estrutura B\u00e1sica de Arquivos"},{"location":"exemplos/#2-configuracao","text":"No arquivo .env (ou vari\u00e1veis de ambiente): VINTI4_POS_ID=90000443 VINTI4_AUT_CODE=SEU_AUTH_CODE_DE_TESTE","title":"\ud83d\udd10 2. Configura\u00e7\u00e3o"},{"location":"exemplos/#3-checkout-e-redirecionamento-vinti4php","text":"Crie o arquivo vinti4.php : <?php use Erilshk\\Vinti4Pay\\Vinti4Pay; use Erilshk\\Vinti4Pay\\Vinti4Result; require __DIR__ . '/vendor/autoload.php'; $posID = getenv('VINTI4_POS_ID'); $authCode = getenv('VINTI4_AUTH_CODE'); $vinti4 = new Vinti4Pay($posID, $authCode); // === Caso seja o retorno do gateway (POST) === if ($_SERVER['REQUEST_METHOD'] === 'POST') { $response = $vinti4->processResponse($_POST); $result = new Vinti4Result($response); $result ->onSuccessfulTransaction(function (Vinti4Result $r) { file_put_contents('payments.log', json_encode($r->toArray(), JSON_PRETTY_PRINT), FILE_APPEND); echo $r->generateReceipt(); }) ->onFailedTransaction(function (Vinti4Result $r) { echo \"<p>Falha no pagamento: {$r->message}</p>\"; }) ->onCancelledTransaction(function (Vinti4Result $r) { echo \"<p>Pagamento cancelado pelo utilizador.</p>\"; }); exit; } // === Checkout inicial (GET) === if (isset($_POST['amount'])) { $amount = (float) $_POST['amount']; // Cria a transa\u00e7\u00e3o $fields = $vinti4->preparePayment( amount: $amount, responseUrl: 'http://localhost:8000/vinti4.php', // retorno local options: [ 'merchantRef' => 'TEST-' . uniqid(), 'merchantSession' => session_id(), ] ); // Redireciona o utilizador para o ambiente de pagamento echo $vinti4->generateHtmlForm($fields); exit; } // === P\u00e1gina inicial de teste === ?> <!DOCTYPE html> <html lang=\"pt\"> <head> <meta charset=\"UTF-8\"> <title>Teste Vinti4Pay</title> <style> body { font-family: Arial, sans-serif; max-width: 400px; margin: 60px auto; text-align: center; } input, button { padding: 10px; width: 100%; margin-top: 10px; font-size: 1rem; } button { background: #007bff; color: white; border: none; cursor: pointer; } button:hover { background: #0056b3; } </style> </head> <body> <h2>\ud83d\udcb3 Teste de Pagamento Vinti4</h2> <form method=\"POST\" action=\"\"> <input type=\"number\" name=\"amount\" step=\"0.01\" min=\"1\" placeholder=\"Montante (ex: 2500)\" required> <button type=\"submit\">Pagar com Vinti4</button> </form> </body> </html>","title":"\ud83d\udcb3 3. Checkout e Redirecionamento (vinti4.php)"},{"location":"exemplos/#4-endpoint-de-callback-callbackphp","text":"O callback \u00e9 a notifica\u00e7\u00e3o direta da Vinti4Net ao servidor, confirmando o estado final da transa\u00e7\u00e3o. <?php use Erilshk\\Vinti4Pay\\Vinti4Pay; require __DIR__ . '/vendor/autoload.php'; $vinti4 = new Vinti4Pay(getenv('VINTI4_POS_ID'), getenv('VINTI4_AUTH_CODE')); $response = $vinti4->processResponse($_POST); file_put_contents('callback.log', json_encode($response, JSON_PRETTY_PRINT), FILE_APPEND); // Sempre retornar HTTP 200 OK http_response_code(200);","title":"\ud83d\udd01 4. Endpoint de Callback (callback.php)"},{"location":"exemplos/#5-fluxo-de-execucao","text":"Cliente \u2192 vinti4.php (checkout) \u2193 Formul\u00e1rio POST \u2192 Vinti4Net \u2193 P\u00e1gina de Pagamento Vinti4Net \u2193 \u2192 Retorno ao comerciante (responseUrl) \u2192 Callback HTTP POST (callback.php)","title":"\ud83d\udcdc 5. Fluxo de Execu\u00e7\u00e3o"},{"location":"exemplos/#6-estrutura-de-dados-recebida-callback","text":"{ \"status\": \"SUCCESS\", \"message\": \"Transa\u00e7\u00e3o aprovada\", \"success\": true, \"data\": { \"merchantRespMerchantRef\": \"TEST-6720ef3d5bc\", \"merchantRespPurchaseAmount\": \"2500.00\", \"merchantRespPurchaseCurrency\": \"132\", \"merchantRespApprovalCode\": \"A12345\" } }","title":"\ud83e\udde9 6. Estrutura de Dados Recebida (Callback)"},{"location":"exemplos/#7-procedimento-de-teste-local","text":"Inicie o servidor embutido PHP bash php -S localhost:8000 Acesse no navegador: http://localhost:8000/vinti4.php Digite um valor (ex: 2500 ) e clique em Pagar com Vinti4 . O sistema ir\u00e1 gerar o formul\u00e1rio de checkout e redirecionar automaticamente para o ambiente Vinti4Net (em produ\u00e7\u00e3o ou sandbox). Ap\u00f3s confirmar o pagamento, voc\u00ea ser\u00e1 redirecionado de volta \u00e0 p\u00e1gina local ( vinti4.php ) e o callback ser\u00e1 executado em paralelo. Consulte os arquivos gerados: payments.log callback.log Esses arquivos cont\u00eam os registros de todas as transa\u00e7\u00f5es processadas.","title":"\ud83e\uddea 7. Procedimento de Teste Local"},{"location":"exemplos/#resultado-esperado","text":"Transa\u00e7\u00f5es bem-sucedidas devem exibir um recibo formatado ( generateReceipt() ). Logs devem conter a resposta completa do gateway. Callback deve retornar HTTP 200 sem conte\u00fado HTML.","title":"\u2705 Resultado Esperado"},{"location":"installation/","text":"\u2699\ufe0f Instala\u00e7\u00e3o do Vinti4Pay PHP SDK Esta documenta\u00e7\u00e3o descreve como instalar e configurar o SDK oficial Vinti4Pay PHP para integra\u00e7\u00e3o com o sistema de pagamentos Vinti4Net (SISP Cabo Verde) . \ud83e\uddf0 Requisitos do Sistema Requisito Detalhes PHP >= 8.0 Extens\u00f5es curl , json , mbstring , openssl Acesso HTTPS Necess\u00e1rio para o endpoint de pagamento da SISP \ud83d\udc8e Instala\u00e7\u00e3o via Composer (recomendada) O m\u00e9todo recomendado para projetos modernos \u00e9 instalar via Composer , que oferece autoload e gerenciamento de depend\u00eancias. composer require erilshk/vinti4pay-php Ap\u00f3s a instala\u00e7\u00e3o: use Erilshk\\Vinti4Pay\\Vinti4Pay; // Instanciar o SDK com POS ID e Auth Code $vinti4 = new Vinti4Pay(posId:'90000443', posAutCode: 'SEU_AUTH_CODE'); // para testes use o paramtro endpoint: $vinti4 = new Vinti4Pay(posId:'90000443', posAutCode: 'SEU_AUTH_CODE', endpoint: 'https://teste.vinti4net.cv/endpoint...'); Formul\u00e1rios Dispon\u00edveis O SDK fornece m\u00e9todos diretos para gerar formul\u00e1rios HTML de pagamento com submiss\u00e3o autom\u00e1tica: M\u00e9todo Tipo de Transa\u00e7\u00e3o Observa\u00e7\u00f5es createPurchaseForm() 1 Compra Requer dados de purchaseRequest ( billing ) createServicePaymentForm() 2 Pagamento de Servi\u00e7o Requer entityCode e referenceNumber createRechargeForm() 3 Recarga Requer entityCode e referenceNumber Todos os m\u00e9todos retornam HTML pronto para submiss\u00e3o autom\u00e1tica . O desenvolvedor n\u00e3o precisa manipular arrays de campos manualmente. Para informar parametros extras, deve-se usar o ultimo parametro desses metodos \ud83d\udce6 Uso sem Composer (vers\u00e3o em portugu\u00eas) Para projetos sem Composer, disponibilizamos os arquivos independentes na pasta dist/ : Vinti4Pay.php \u2014 classe principal Vinti4Refund.php \u2014 classe de estornos/refunds Nota: Esta vers\u00e3o est\u00e1 em portugu\u00eas e mant\u00e9m os mesmos m\u00e9todos ( createPurchaseForm() , createServicePaymentForm() , createRechargeForm() ) com funcionamento direto. Inclus\u00e3o manual: require 'dist/Vinti4Pay.php'; // require 'dist/Vinti4Refund.php'; $vinti4 = new Vinti4Pay('90000443', 'SEU_AUTH_CODE'); // Exemplo: criar formul\u00e1rio de compra echo $vinti4->createPurchaseForm( amount: 1500, responseUrl: 'https://seusite.cv/vinti4/callback.php', billing: [ 'billAddrCountry' => 'CV', 'billAddrCity' => 'Praia', 'billAddrLine1' => 'Rua Principal', 'billAddrPostCode'=> '7600', 'email' => 'cliente@exemplo.cv' ] ); \ud83d\udce5 Download direto Os arquivos podem ser obtidos no reposit\u00f3rio oficial: \u27a1\ufe0f Vers\u00e3o independente em portugu\u00eas (dist) \ud83e\uddea Teste em Ambiente Local \u00c9 poss\u00edvel executar rapidamente um servidor PHP para testes: php -S localhost:8080 -t public Configure o callback da SISP apontando para o seu endpoint local ou p\u00fablico: https://seusite.cv/vinti4/callback.php No callback, utilize os m\u00e9todos: processResponse($_POST) \u2192 valida e processa respostas de pagamentos processRefundResponse($_POST) \u2192 valida e processa respostas de estornos \ud83d\udd27 Pr\u00f3ximos Passos Ap\u00f3s a instala\u00e7\u00e3o, consulte as p\u00e1ginas de exemplos para cada tipo de transa\u00e7\u00e3o: Compra \u2192 Pagamento de Servi\u00e7o \u2192 Recarga \u2192 Callback / Retorno \u2192","title":"Instala\u00e7\u00e3o e Uso"},{"location":"installation/#instalacao-do-vinti4pay-php-sdk","text":"Esta documenta\u00e7\u00e3o descreve como instalar e configurar o SDK oficial Vinti4Pay PHP para integra\u00e7\u00e3o com o sistema de pagamentos Vinti4Net (SISP Cabo Verde) .","title":"\u2699\ufe0f Instala\u00e7\u00e3o do Vinti4Pay PHP SDK"},{"location":"installation/#requisitos-do-sistema","text":"Requisito Detalhes PHP >= 8.0 Extens\u00f5es curl , json , mbstring , openssl Acesso HTTPS Necess\u00e1rio para o endpoint de pagamento da SISP","title":"\ud83e\uddf0 Requisitos do Sistema"},{"location":"installation/#instalacao-via-composer-recomendada","text":"O m\u00e9todo recomendado para projetos modernos \u00e9 instalar via Composer , que oferece autoload e gerenciamento de depend\u00eancias. composer require erilshk/vinti4pay-php Ap\u00f3s a instala\u00e7\u00e3o: use Erilshk\\Vinti4Pay\\Vinti4Pay; // Instanciar o SDK com POS ID e Auth Code $vinti4 = new Vinti4Pay(posId:'90000443', posAutCode: 'SEU_AUTH_CODE'); // para testes use o paramtro endpoint: $vinti4 = new Vinti4Pay(posId:'90000443', posAutCode: 'SEU_AUTH_CODE', endpoint: 'https://teste.vinti4net.cv/endpoint...');","title":"\ud83d\udc8e Instala\u00e7\u00e3o via Composer (recomendada)"},{"location":"installation/#formularios-disponiveis","text":"O SDK fornece m\u00e9todos diretos para gerar formul\u00e1rios HTML de pagamento com submiss\u00e3o autom\u00e1tica: M\u00e9todo Tipo de Transa\u00e7\u00e3o Observa\u00e7\u00f5es createPurchaseForm() 1 Compra Requer dados de purchaseRequest ( billing ) createServicePaymentForm() 2 Pagamento de Servi\u00e7o Requer entityCode e referenceNumber createRechargeForm() 3 Recarga Requer entityCode e referenceNumber Todos os m\u00e9todos retornam HTML pronto para submiss\u00e3o autom\u00e1tica . O desenvolvedor n\u00e3o precisa manipular arrays de campos manualmente. Para informar parametros extras, deve-se usar o ultimo parametro desses metodos","title":"Formul\u00e1rios Dispon\u00edveis"},{"location":"installation/#uso-sem-composer-versao-em-portugues","text":"Para projetos sem Composer, disponibilizamos os arquivos independentes na pasta dist/ : Vinti4Pay.php \u2014 classe principal Vinti4Refund.php \u2014 classe de estornos/refunds Nota: Esta vers\u00e3o est\u00e1 em portugu\u00eas e mant\u00e9m os mesmos m\u00e9todos ( createPurchaseForm() , createServicePaymentForm() , createRechargeForm() ) com funcionamento direto.","title":"\ud83d\udce6 Uso sem Composer (vers\u00e3o em portugu\u00eas)"},{"location":"installation/#inclusao-manual","text":"require 'dist/Vinti4Pay.php'; // require 'dist/Vinti4Refund.php'; $vinti4 = new Vinti4Pay('90000443', 'SEU_AUTH_CODE'); // Exemplo: criar formul\u00e1rio de compra echo $vinti4->createPurchaseForm( amount: 1500, responseUrl: 'https://seusite.cv/vinti4/callback.php', billing: [ 'billAddrCountry' => 'CV', 'billAddrCity' => 'Praia', 'billAddrLine1' => 'Rua Principal', 'billAddrPostCode'=> '7600', 'email' => 'cliente@exemplo.cv' ] );","title":"Inclus\u00e3o manual:"},{"location":"installation/#download-direto","text":"Os arquivos podem ser obtidos no reposit\u00f3rio oficial: \u27a1\ufe0f Vers\u00e3o independente em portugu\u00eas (dist)","title":"\ud83d\udce5 Download direto"},{"location":"installation/#teste-em-ambiente-local","text":"\u00c9 poss\u00edvel executar rapidamente um servidor PHP para testes: php -S localhost:8080 -t public Configure o callback da SISP apontando para o seu endpoint local ou p\u00fablico: https://seusite.cv/vinti4/callback.php No callback, utilize os m\u00e9todos: processResponse($_POST) \u2192 valida e processa respostas de pagamentos processRefundResponse($_POST) \u2192 valida e processa respostas de estornos","title":"\ud83e\uddea Teste em Ambiente Local"},{"location":"installation/#proximos-passos","text":"Ap\u00f3s a instala\u00e7\u00e3o, consulte as p\u00e1ginas de exemplos para cada tipo de transa\u00e7\u00e3o: Compra \u2192 Pagamento de Servi\u00e7o \u2192 Recarga \u2192 Callback / Retorno \u2192","title":"\ud83d\udd27 Pr\u00f3ximos Passos"},{"location":"payments/","text":"\ud83d\udcb3 Pagamentos com Vinti4Pay Esta p\u00e1gina apresenta como gerar formul\u00e1rios de pagamento utilizando o SDK Vinti4Pay PHP , abrangendo Compra, Pagamento de Servi\u00e7o e Recarga . O SDK fornece m\u00e9todos diretos para cada tipo de transa\u00e7\u00e3o, mas todos internamente chamam o m\u00e9todo central preparePayment() . \u2699\ufe0f M\u00e9todo Central: preparePayment public function preparePayment( float|string $amount, string $responseUrl, array $options = [] ): array Descri\u00e7\u00e3o Prepara os dados da transa\u00e7\u00e3o, incluindo: purchaseRequest (para compras 3DS) Fingerprint para seguran\u00e7a Campos obrigat\u00f3rios e opcionais do pagamento N\u00e3o gera HTML ; retorna os campos prontos e o postUrl . Par\u00e2metros Par\u00e2metro Tipo Obrigat\u00f3rio Descri\u00e7\u00e3o amount float string Sim Valor da transa\u00e7\u00e3o (em CVE). responseUrl string Sim URL do callback que receber\u00e1 a resposta do pagamento. options array N\u00e3o Configura\u00e7\u00f5es adicionais: \u2022 billing = dados de fatura\u00e7\u00e3o (compra) \u2022 transactionCode = tipo da transa\u00e7\u00e3o ( 1 , 2 , 3 ) \u2022 merchantRef , merchantSession , languageMessages , entityCode , referenceNumber Retorno [ 'postUrl' => 'https://mc.vinti4net.cv/BizMPIOnUs/CardPayment?...', 'fields' => [ /* campos a submeter via POST */ ] ] \ud83d\udd39 Tipos de Pagamento 1. Compra (TransactionCode = 1) public function createPurchaseForm( float|string $amount, string $responseUrl, array $billing, array $extras = [] ): string Requer billing : billAddrCountry , billAddrCity , billAddrLine1 , billAddrPostCode , email Retorna formul\u00e1rio HTML auto-submitting 2. Pagamento de Servi\u00e7o (TransactionCode = 2) public function createServicePaymentForm( float|string $amount, string $responseUrl, string $entityCode, string $referenceNumber, array $extras = [] ): string Requer entityCode e referenceNumber num\u00e9ricos Retorna formul\u00e1rio HTML pronto para submiss\u00e3o 3. Recarga (TransactionCode = 3) public function createRechargeForm( float|string $amount, string $responseUrl, string $entityCode, string $referenceNumber, array $extras = [] ): string Igual ao pagamento de servi\u00e7o, mas transactionCode = 3 entityCode e referenceNumber obrigat\u00f3rios Retorna HTML form pronto \ud83d\udd39 Exemplo de Uso (Compra, Servi\u00e7o, Recarga) use Erilshk\\Vinti4Pay\\Vinti4Pay; $vinti4 = new Vinti4Pay('90000443', 'SEU_AUTH_CODE'); // 1. Compra $billing = [ 'billAddrCountry' => 'CV', 'billAddrCity' => 'Praia', 'billAddrLine1' => 'Rua Principal', 'billAddrPostCode'=> '7600', 'email' => 'cliente@exemplo.cv' ]; echo $vinti4->createPurchaseForm(1500, 'https://site.cv/callback.php', $billing); // 2. Pagamento de Servi\u00e7o echo $vinti4->createServicePaymentForm(2000, 'https://site.cv/callback.php', '123456', '912345678'); // 3. Recarga echo $vinti4->createRechargeForm(500, 'https://site.cv/callback.php', '987654', '9112233'); Recomenda\u00e7\u00f5es use esses headers para evitar cacheamento da p\u00e1gina, oq pode levar a problemas de atualizacao e experi\u00eancia. header(\"Cache-Control: no-store, no-cache, must-revalidate, max-age=0\"); header(\"Cache-Control: post-check=0, pre-check=0\", false); header(\"Pragma: no-cache\");","title":"Pagamentos"},{"location":"payments/#pagamentos-com-vinti4pay","text":"Esta p\u00e1gina apresenta como gerar formul\u00e1rios de pagamento utilizando o SDK Vinti4Pay PHP , abrangendo Compra, Pagamento de Servi\u00e7o e Recarga . O SDK fornece m\u00e9todos diretos para cada tipo de transa\u00e7\u00e3o, mas todos internamente chamam o m\u00e9todo central preparePayment() .","title":"\ud83d\udcb3 Pagamentos com Vinti4Pay"},{"location":"payments/#metodo-central-preparepayment","text":"public function preparePayment( float|string $amount, string $responseUrl, array $options = [] ): array","title":"\u2699\ufe0f M\u00e9todo Central: preparePayment"},{"location":"payments/#descricao","text":"Prepara os dados da transa\u00e7\u00e3o, incluindo: purchaseRequest (para compras 3DS) Fingerprint para seguran\u00e7a Campos obrigat\u00f3rios e opcionais do pagamento N\u00e3o gera HTML ; retorna os campos prontos e o postUrl .","title":"Descri\u00e7\u00e3o"},{"location":"payments/#parametros","text":"Par\u00e2metro Tipo Obrigat\u00f3rio Descri\u00e7\u00e3o amount float string Sim Valor da transa\u00e7\u00e3o (em CVE). responseUrl string Sim URL do callback que receber\u00e1 a resposta do pagamento. options array N\u00e3o Configura\u00e7\u00f5es adicionais: \u2022 billing = dados de fatura\u00e7\u00e3o (compra) \u2022 transactionCode = tipo da transa\u00e7\u00e3o ( 1 , 2 , 3 ) \u2022 merchantRef , merchantSession , languageMessages , entityCode , referenceNumber","title":"Par\u00e2metros"},{"location":"payments/#retorno","text":"[ 'postUrl' => 'https://mc.vinti4net.cv/BizMPIOnUs/CardPayment?...', 'fields' => [ /* campos a submeter via POST */ ] ]","title":"Retorno"},{"location":"payments/#tipos-de-pagamento","text":"","title":"\ud83d\udd39 Tipos de Pagamento"},{"location":"payments/#1-compra-transactioncode-1","text":"public function createPurchaseForm( float|string $amount, string $responseUrl, array $billing, array $extras = [] ): string Requer billing : billAddrCountry , billAddrCity , billAddrLine1 , billAddrPostCode , email Retorna formul\u00e1rio HTML auto-submitting","title":"1. Compra (TransactionCode = 1)"},{"location":"payments/#2-pagamento-de-servico-transactioncode-2","text":"public function createServicePaymentForm( float|string $amount, string $responseUrl, string $entityCode, string $referenceNumber, array $extras = [] ): string Requer entityCode e referenceNumber num\u00e9ricos Retorna formul\u00e1rio HTML pronto para submiss\u00e3o","title":"2. Pagamento de Servi\u00e7o (TransactionCode = 2)"},{"location":"payments/#3-recarga-transactioncode-3","text":"public function createRechargeForm( float|string $amount, string $responseUrl, string $entityCode, string $referenceNumber, array $extras = [] ): string Igual ao pagamento de servi\u00e7o, mas transactionCode = 3 entityCode e referenceNumber obrigat\u00f3rios Retorna HTML form pronto","title":"3. Recarga (TransactionCode = 3)"},{"location":"payments/#exemplo-de-uso-compra-servico-recarga","text":"use Erilshk\\Vinti4Pay\\Vinti4Pay; $vinti4 = new Vinti4Pay('90000443', 'SEU_AUTH_CODE'); // 1. Compra $billing = [ 'billAddrCountry' => 'CV', 'billAddrCity' => 'Praia', 'billAddrLine1' => 'Rua Principal', 'billAddrPostCode'=> '7600', 'email' => 'cliente@exemplo.cv' ]; echo $vinti4->createPurchaseForm(1500, 'https://site.cv/callback.php', $billing); // 2. Pagamento de Servi\u00e7o echo $vinti4->createServicePaymentForm(2000, 'https://site.cv/callback.php', '123456', '912345678'); // 3. Recarga echo $vinti4->createRechargeForm(500, 'https://site.cv/callback.php', '987654', '9112233');","title":"\ud83d\udd39 Exemplo de Uso (Compra, Servi\u00e7o, Recarga)"},{"location":"payments/#recomendacoes","text":"use esses headers para evitar cacheamento da p\u00e1gina, oq pode levar a problemas de atualizacao e experi\u00eancia. header(\"Cache-Control: no-store, no-cache, must-revalidate, max-age=0\"); header(\"Cache-Control: post-check=0, pre-check=0\", false); header(\"Pragma: no-cache\");","title":"Recomenda\u00e7\u00f5es"},{"location":"vinti4pay/","text":"\ud83d\udcb3 Vinti4Pay PHP SDK \u2014 Pagamentos Esta documenta\u00e7\u00e3o detalha como integrar pagamentos usando o Vinti4Pay PHP SDK (Compra, Pagamento de Servi\u00e7o e Recarga) com exemplos, tabela de campos de fatura\u00e7\u00e3o, e detalhes do callback. \ud83d\udd39 Transaction Codes C\u00f3digo Tipo de Pagamento Campos Obrigat\u00f3rios 1 Compra billing (array com dados de fatura\u00e7\u00e3o) 2 Pagamento de Servi\u00e7o entityCode , referenceNumber 3 Recarga entityCode , referenceNumber Todos os pagamentos usam preparePayment() como m\u00e9todo central. \u2699\ufe0f M\u00e9todo Central \u2014 preparePayment() public function preparePayment( float|string $amount, string $responseUrl, array $options = [] ): array Par\u00e2metros Par\u00e2metro Tipo Obrigat\u00f3rio Descri\u00e7\u00e3o amount float/string Sim Valor da transa\u00e7\u00e3o em CVE (multiplicado internamente por 1000) responseUrl string Sim URL de callback que receber\u00e1 o retorno da transa\u00e7\u00e3o options array N\u00e3o Op\u00e7\u00f5es adicionais (detalhadas abaixo) Op\u00e7\u00f5es ( options ) Chave Tipo Obrigat\u00f3rio Descri\u00e7\u00e3o transactionCode string N\u00e3o Tipo de transa\u00e7\u00e3o ( 1 = Compra , 2 =Servi\u00e7o, 3 =Recarga). billing array Apenas para Compra Dados de fatura\u00e7\u00e3o PurchaseRequest merchantRef string N\u00e3o, mas recomendado Refer\u00eancia da transa\u00e7\u00e3o; gerada automaticamente se n\u00e3o fornecida merchantSession string N\u00e3o, mas recomendado Sess\u00e3o da transa\u00e7\u00e3o; gerada automaticamente se n\u00e3o fornecida languageMessages string N\u00e3o Idioma das mensagens do gateway (ex: en , pt ) entityCode string Apenas Servi\u00e7o/Recarga C\u00f3digo da entidade (num\u00e9rico) referenceNumber string Apenas Servi\u00e7o/Recarga N\u00famero de refer\u00eancia (num\u00e9rico) currency string N\u00e3o C\u00f3digo da moeda; padr\u00e3o: CVE ( 132 ) Campos de Billing (para Compra) Campo Tipo Obrigat\u00f3rio Descri\u00e7\u00e3o billAddrCountry string Sim C\u00f3digo n\u00famerico do pa\u00eds (ex: 132 ) - lista billAddrCity string Sim Cidade do cliente billAddrLine1 string Sim Endere\u00e7o principal billAddrLine2 string N\u00e3o Complemento do endere\u00e7o billAddrLine3 string N\u00e3o Complemento adicional billAddrPostCode string Sim C\u00f3digo postal - lista billAddrState string N\u00e3o Estado / regi\u00e3o email string Sim Email do cliente addrMatch string N\u00e3o 'Y' se endere\u00e7o de entrega igual ao de fatura\u00e7\u00e3o workPhone array N\u00e3o Telefone do trabalho { cc: \"238\", subscriber: \"XXXXXXX\" } mobilePhone array N\u00e3o Telefone m\u00f3vel { cc: \"238\", subscriber: \"XXXXXXX\" } acctID string N\u00e3o id de conta / identifica\u00e7\u00e3o do cliente acctInfo string N\u00e3o Informa\u00e7\u00e3o adicional docliente chAccAgeInd , chAccChange , chAccDate , chAccPwChange , chAccPwChangeInd , suspiciousAccActivity Campos adicionais podem ser enviados conforme necessidade, todos opcionais. \ud83d\udd39 M\u00e9todos Diretos de Pagamento 1\ufe0f\u20e3 Compra public function createPurchaseForm(float|string $amount, string $responseUrl, array $billing, array $extras = []): string 2\ufe0f\u20e3 Pagamento de Servi\u00e7o public function createServicePaymentForm(float|string $amount, string $responseUrl, string $entityCode, string $referenceNumber, array $extras = []): string 3\ufe0f\u20e3 Recarga public function createRechargeForm(float|string $amount, string $responseUrl, string $entityCode, string $referenceNumber, array $extras = []): string Todos os m\u00e9todos chamam internamente preparePayment() e retornam formul\u00e1rio HTML auto-submetido . \ud83d\udcdd Exemplo de Uso \u2014 Compra use Erilshk\\Vinti4Pay\\Vinti4Pay; $vinti4 = new Vinti4Pay('90000443', 'SEU_AUTH_CODE'); $billing = [ 'billAddrCountry' => 'CV', 'billAddrCity' => 'Praia', 'billAddrLine1' => 'Rua Principal', 'billAddrPostCode'=> '7600', 'email' => 'cliente@exemplo.cv', 'addrMatch' => 'Y' ]; echo $vinti4->createPurchaseForm( 1500, 'https://seusite.cv/vinti4/callback.php', $billing ); \ud83d\udd39 Callback / Response Quando o usu\u00e1rio finaliza o pagamento, o gateway envia POST para o responseUrl . Processando o callback $response = $vinti4->processResponse($_POST); if ($response['success']) { // Pagamento aprovado echo \"Transa\u00e7\u00e3o aprovada!\"; } else { // Erro ou cancelamento echo \"Erro: \" . $response['message']; } Estrutura do Retorno ( processResponse ) Campo Tipo Descri\u00e7\u00e3o data array Dados originais recebidos do gateway (\u00e9 bom guardar) status string 'SUCCESS' , 'CANCELLED' , 'INVALID_FINGERPRINT' , 'ERROR' message string Mensagem leg\u00edvel sobre a transa\u00e7\u00e3o success bool true se transa\u00e7\u00e3o aprovada (mesmo que fingerprint inv\u00e1lido) dcc array Informa\u00e7\u00f5es DCC (se presentes) detail string Detalhe de erro (se presente) debug array Informa\u00e7\u00f5es para debug de fingerprint (se inv\u00e1lida) O SDK valida automaticamente fingerprint e informa o status correto, inclusive em casos de cancelamento pelo usu\u00e1rio. Exemplo com Vinti4Result use Erilshk\\Vinti4Pay\\Vinti4Pay; use Erilshk\\Vinti4Pay\\Vinti4Result; $vinti4 = new Vinti4Pay('91234567', 'SEU_AUTH_CODE'); // Recebe e processa a resposta do gateway (normalmente $_POST) $response = $vinti4->processResponse($_POST); // instancia o Vinti4Result $result = new Vinti4Result($response); // A\u00e7\u00f5es baseadas no status $result->onSuccessfulTransaction(function (Vinti4Result $r) { echo \"<h3>\u2705 Pagamento aprovado!</h3>\"; echo $r->generateReceipt(); }); $result->->onCancelledTransaction(function (Vinti4Result $r) { echo \"<h3>\u26a0\ufe0f Pagamento cancelado pelo utilizador.</h3>\"; }); $result->->onFailedTransaction(function (Vinti4Result $r) { echo \"<h3>\u274c Erro no pagamento:</h3>\"; echo \"<p>{$r->message}</p>\"; }); \u26a0\ufe0f Observa\u00e7\u00f5es T\u00e9cnicas Campos obrigat\u00f3rios de billing s\u00e3o validados; falta algum campo gera \\InvalidArgumentException . amount \u00e9 convertido internamente para milles (multiplicado por 1000). purchaseRequest \u00e9 gerado em JSON Base64 para 3DS. preparePayment() centraliza todos os tipos de pagamento; Use para mais controle na sua requisi\u00e7\u00e3o e depois generateHtmlForm() para rednerizar o formulario. Qualquer falha no encode JSON de purchaseRequest gera \\Exception . Para projetos sem Composer, use dist/Vinti4Pay.php .","title":"Refer\u00eancia"},{"location":"vinti4pay/#vinti4pay-php-sdk-pagamentos","text":"Esta documenta\u00e7\u00e3o detalha como integrar pagamentos usando o Vinti4Pay PHP SDK (Compra, Pagamento de Servi\u00e7o e Recarga) com exemplos, tabela de campos de fatura\u00e7\u00e3o, e detalhes do callback.","title":"\ud83d\udcb3 Vinti4Pay PHP SDK \u2014 Pagamentos"},{"location":"vinti4pay/#transaction-codes","text":"C\u00f3digo Tipo de Pagamento Campos Obrigat\u00f3rios 1 Compra billing (array com dados de fatura\u00e7\u00e3o) 2 Pagamento de Servi\u00e7o entityCode , referenceNumber 3 Recarga entityCode , referenceNumber Todos os pagamentos usam preparePayment() como m\u00e9todo central.","title":"\ud83d\udd39 Transaction Codes"},{"location":"vinti4pay/#metodo-central-preparepayment","text":"public function preparePayment( float|string $amount, string $responseUrl, array $options = [] ): array","title":"\u2699\ufe0f M\u00e9todo Central \u2014 preparePayment()"},{"location":"vinti4pay/#parametros","text":"Par\u00e2metro Tipo Obrigat\u00f3rio Descri\u00e7\u00e3o amount float/string Sim Valor da transa\u00e7\u00e3o em CVE (multiplicado internamente por 1000) responseUrl string Sim URL de callback que receber\u00e1 o retorno da transa\u00e7\u00e3o options array N\u00e3o Op\u00e7\u00f5es adicionais (detalhadas abaixo)","title":"Par\u00e2metros"},{"location":"vinti4pay/#opcoes-options","text":"Chave Tipo Obrigat\u00f3rio Descri\u00e7\u00e3o transactionCode string N\u00e3o Tipo de transa\u00e7\u00e3o ( 1 = Compra , 2 =Servi\u00e7o, 3 =Recarga). billing array Apenas para Compra Dados de fatura\u00e7\u00e3o PurchaseRequest merchantRef string N\u00e3o, mas recomendado Refer\u00eancia da transa\u00e7\u00e3o; gerada automaticamente se n\u00e3o fornecida merchantSession string N\u00e3o, mas recomendado Sess\u00e3o da transa\u00e7\u00e3o; gerada automaticamente se n\u00e3o fornecida languageMessages string N\u00e3o Idioma das mensagens do gateway (ex: en , pt ) entityCode string Apenas Servi\u00e7o/Recarga C\u00f3digo da entidade (num\u00e9rico) referenceNumber string Apenas Servi\u00e7o/Recarga N\u00famero de refer\u00eancia (num\u00e9rico) currency string N\u00e3o C\u00f3digo da moeda; padr\u00e3o: CVE ( 132 )","title":"Op\u00e7\u00f5es (options)"},{"location":"vinti4pay/#campos-de-billing-para-compra","text":"Campo Tipo Obrigat\u00f3rio Descri\u00e7\u00e3o billAddrCountry string Sim C\u00f3digo n\u00famerico do pa\u00eds (ex: 132 ) - lista billAddrCity string Sim Cidade do cliente billAddrLine1 string Sim Endere\u00e7o principal billAddrLine2 string N\u00e3o Complemento do endere\u00e7o billAddrLine3 string N\u00e3o Complemento adicional billAddrPostCode string Sim C\u00f3digo postal - lista billAddrState string N\u00e3o Estado / regi\u00e3o email string Sim Email do cliente addrMatch string N\u00e3o 'Y' se endere\u00e7o de entrega igual ao de fatura\u00e7\u00e3o workPhone array N\u00e3o Telefone do trabalho { cc: \"238\", subscriber: \"XXXXXXX\" } mobilePhone array N\u00e3o Telefone m\u00f3vel { cc: \"238\", subscriber: \"XXXXXXX\" } acctID string N\u00e3o id de conta / identifica\u00e7\u00e3o do cliente acctInfo string N\u00e3o Informa\u00e7\u00e3o adicional docliente chAccAgeInd , chAccChange , chAccDate , chAccPwChange , chAccPwChangeInd , suspiciousAccActivity Campos adicionais podem ser enviados conforme necessidade, todos opcionais.","title":"Campos de Billing (para Compra)"},{"location":"vinti4pay/#metodos-diretos-de-pagamento","text":"","title":"\ud83d\udd39 M\u00e9todos Diretos de Pagamento"},{"location":"vinti4pay/#1-compra","text":"public function createPurchaseForm(float|string $amount, string $responseUrl, array $billing, array $extras = []): string","title":"1\ufe0f\u20e3 Compra"},{"location":"vinti4pay/#2-pagamento-de-servico","text":"public function createServicePaymentForm(float|string $amount, string $responseUrl, string $entityCode, string $referenceNumber, array $extras = []): string","title":"2\ufe0f\u20e3 Pagamento de Servi\u00e7o"},{"location":"vinti4pay/#3-recarga","text":"public function createRechargeForm(float|string $amount, string $responseUrl, string $entityCode, string $referenceNumber, array $extras = []): string Todos os m\u00e9todos chamam internamente preparePayment() e retornam formul\u00e1rio HTML auto-submetido .","title":"3\ufe0f\u20e3 Recarga"},{"location":"vinti4pay/#exemplo-de-uso-compra","text":"use Erilshk\\Vinti4Pay\\Vinti4Pay; $vinti4 = new Vinti4Pay('90000443', 'SEU_AUTH_CODE'); $billing = [ 'billAddrCountry' => 'CV', 'billAddrCity' => 'Praia', 'billAddrLine1' => 'Rua Principal', 'billAddrPostCode'=> '7600', 'email' => 'cliente@exemplo.cv', 'addrMatch' => 'Y' ]; echo $vinti4->createPurchaseForm( 1500, 'https://seusite.cv/vinti4/callback.php', $billing );","title":"\ud83d\udcdd Exemplo de Uso \u2014 Compra"},{"location":"vinti4pay/#callback-response","text":"Quando o usu\u00e1rio finaliza o pagamento, o gateway envia POST para o responseUrl .","title":"\ud83d\udd39 Callback / Response"},{"location":"vinti4pay/#processando-o-callback","text":"$response = $vinti4->processResponse($_POST); if ($response['success']) { // Pagamento aprovado echo \"Transa\u00e7\u00e3o aprovada!\"; } else { // Erro ou cancelamento echo \"Erro: \" . $response['message']; }","title":"Processando o callback"},{"location":"vinti4pay/#estrutura-do-retorno-processresponse","text":"Campo Tipo Descri\u00e7\u00e3o data array Dados originais recebidos do gateway (\u00e9 bom guardar) status string 'SUCCESS' , 'CANCELLED' , 'INVALID_FINGERPRINT' , 'ERROR' message string Mensagem leg\u00edvel sobre a transa\u00e7\u00e3o success bool true se transa\u00e7\u00e3o aprovada (mesmo que fingerprint inv\u00e1lido) dcc array Informa\u00e7\u00f5es DCC (se presentes) detail string Detalhe de erro (se presente) debug array Informa\u00e7\u00f5es para debug de fingerprint (se inv\u00e1lida) O SDK valida automaticamente fingerprint e informa o status correto, inclusive em casos de cancelamento pelo usu\u00e1rio.","title":"Estrutura do Retorno (processResponse)"},{"location":"vinti4pay/#exemplo-com-vinti4result","text":"use Erilshk\\Vinti4Pay\\Vinti4Pay; use Erilshk\\Vinti4Pay\\Vinti4Result; $vinti4 = new Vinti4Pay('91234567', 'SEU_AUTH_CODE'); // Recebe e processa a resposta do gateway (normalmente $_POST) $response = $vinti4->processResponse($_POST); // instancia o Vinti4Result $result = new Vinti4Result($response); // A\u00e7\u00f5es baseadas no status $result->onSuccessfulTransaction(function (Vinti4Result $r) { echo \"<h3>\u2705 Pagamento aprovado!</h3>\"; echo $r->generateReceipt(); }); $result->->onCancelledTransaction(function (Vinti4Result $r) { echo \"<h3>\u26a0\ufe0f Pagamento cancelado pelo utilizador.</h3>\"; }); $result->->onFailedTransaction(function (Vinti4Result $r) { echo \"<h3>\u274c Erro no pagamento:</h3>\"; echo \"<p>{$r->message}</p>\"; });","title":"Exemplo com Vinti4Result"},{"location":"vinti4pay/#observacoes-tecnicas","text":"Campos obrigat\u00f3rios de billing s\u00e3o validados; falta algum campo gera \\InvalidArgumentException . amount \u00e9 convertido internamente para milles (multiplicado por 1000). purchaseRequest \u00e9 gerado em JSON Base64 para 3DS. preparePayment() centraliza todos os tipos de pagamento; Use para mais controle na sua requisi\u00e7\u00e3o e depois generateHtmlForm() para rednerizar o formulario. Qualquer falha no encode JSON de purchaseRequest gera \\Exception . Para projetos sem Composer, use dist/Vinti4Pay.php .","title":"\u26a0\ufe0f Observa\u00e7\u00f5es T\u00e9cnicas"}]}